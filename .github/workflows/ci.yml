# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v2
    - name: create a test run based on a given scenarios's tag
      id: test_run_id
      env: |
        API_ACCESS_TOKEN:${{ secrets.API_ACCESS_TOKEN }}
        API_UID: ${{ secrets.API_UID }}
        API_CLIENT: ${{ secrets.API_CLIENT }}
      run: |
         sh "${GITHUB_WORKSPACE}/create_tr_sc_tags_CI.sh"
      shell: bash
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ steps.test_run_id.outputs.test_run_id }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.5.5
        bundler-cache: true
    - name: Install hiptest-publisher
      run: gem install hiptest-publisher    
    - name: Update tests from CucumberStudio and fetch UIDs in scenarios
      env:
        CS_PROJECT_ACCESS_TOKEN: ${{ secrets.CS_TOKEN_PTOJECT }}
      run: hiptest-publisher -c cucumber-java.conf --token=${CS_PROJECT_ACCESS_TOKEN} --test-run-id=258233 --only=features --verbose
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn --file ${GITHUB_WORKSPACE}/pom.xml test
    - name: Push cucumber-json report file to CucumberStudio test run
      env:
        CS_PROJECT_ACCESS_TOKEN: ${{ secrets.CS_TOKEN_PTOJECT }}
        TEST_RUN_ID: ${{ steps.keyvalue.outputs.test_run_id }}
      run: hiptest-publisher -c cucumber-java.conf --token=${CS_PROJECT_ACCESS_TOKEN} --test-run-id=${TEST_RUN_ID} --push="${GITHUB_WORKSPACE}/target/cuke-results.json" --verbose
